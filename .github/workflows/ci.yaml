name: CI

on: push

jobs:
  check:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Download dependencies
        run: go mod download

      - name: Check format
        run: test -z $(gofmt -l .)

      - name: Lint
        run: go vet ./...

      - name: Run tidy
        run: go mod tidy -diff

      - uses: dominikh/staticcheck-action@v1.3.1
        name: Run staticcheck
        with:
          version: "2024.1.1"
          install-go: false

      - name: Verify modules
        run: go mod verify

      - name: Build
        run: go build -o /dev/null ./...

      - name: Test
        # TODO: Report the coverage
        run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...

  check-sql:
    name: Check database queries
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.4
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: wishlist
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/$version/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate

      - name: Setup SQLC
        uses: sqlc-dev/setup-sqlc@v4
        with:
          sqlc-version: 1.27.0

      - name: Run migrations
        run: make migrate

      - name: Lint queries
        run: sqlc vet
